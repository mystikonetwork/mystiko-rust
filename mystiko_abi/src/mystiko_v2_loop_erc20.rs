pub use mystiko_v2_loop_erc20::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types
)]
pub mod mystiko_v2_loop_erc20 {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"contract IHasher3\",\"name\":\"_hasher3\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"_token\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"AmountTooLarge\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"AmountTooSmall\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"CommitmentHashIncorrect\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"DepositsDisabled\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"HashKGreaterThanFieldSize\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"MinAmountGreaterThanMaxAmount\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"NotChanged\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"OnlyOperator\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"RandomSGreaterThanFieldSize\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"SanctionedAddress\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\",\"components\":[],\"indexed\":false},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"DepositAmountLimits\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"DepositsDisabled\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"OperatorChanged\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"SanctionsCheck\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"contract ISanctionsList\",\"name\":\"sanctions\",\"type\":\"address\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"SanctionsList\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"assetDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"assetName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"assetSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"assetType\",\"outputs\":[{\"internalType\":\"enum AssetPool.AssetType\",\"name\":\"\",\"type\":\"uint8\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"bridgeType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"changeOperator\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"struct IMystikoLoop.DepositRequest\",\"name\":\"_request\",\"type\":\"tuple\",\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"commitment\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"hashK\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint128\",\"name\":\"randomS\",\"type\":\"uint128\",\"components\":[]},{\"internalType\":\"bytes\",\"name\":\"encryptedNote\",\"type\":\"bytes\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"rollupFee\",\"type\":\"uint256\",\"components\":[]}]}],\"stateMutability\":\"payable\",\"type\":\"function\",\"name\":\"deposit\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"disableSanctionsCheck\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"enableSanctionsCheck\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getAssociatedCommitmentPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getMaxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getMinAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isDepositsDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"sanctionsCheck\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"sanctionsList\",\"outputs\":[{\"internalType\":\"contract ISanctionsList\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_commitmentPoolAddress\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setAssociatedCommitmentPool\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setDepositsDisabled\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAmount\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateDepositAmountLimits\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"contract ISanctionsList\",\"name\":\"_sanction\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateSanctionsListAddress\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static MYSTIKOV2LOOPERC20_ABI: ::ethers_contract::Lazy<::ethers_core::abi::Abi> =
        ::ethers_contract::Lazy::new(|| {
            ::ethers_core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid")
        });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        96,
        0,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        168,
        27,
        3,
        25,
        22,
        116,
        1,
        64,
        197,
        121,
        35,
        146,
        75,
        92,
        92,
        84,
        85,
        196,
        141,
        147,
        49,
        113,
        57,
        173,
        218,
        200,
        251,
        23,
        144,
        85,
        52,
        128,
        21,
        97,
        0,
        55,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        97,
        20,
        243,
        56,
        3,
        128,
        97,
        20,
        243,
        131,
        57,
        129,
        1,
        96,
        64,
        129,
        144,
        82,
        97,
        0,
        86,
        145,
        97,
        0,
        146,
        86,
        91,
        96,
        5,
        128,
        84,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        145,
        130,
        22,
        23,
        144,
        145,
        85,
        96,
        1,
        128,
        84,
        130,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        148,
        133,
        22,
        23,
        144,
        85,
        96,
        6,
        128,
        84,
        144,
        145,
        22,
        145,
        144,
        146,
        22,
        23,
        144,
        85,
        97,
        0,
        228,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        0,
        165,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        81,
        97,
        0,
        176,
        129,
        97,
        0,
        204,
        86,
        91,
        96,
        32,
        132,
        1,
        81,
        144,
        146,
        80,
        97,
        0,
        193,
        129,
        97,
        0,
        204,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        0,
        225,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        86,
        91,
        97,
        20,
        0,
        128,
        97,
        0,
        243,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        97,
        1,
        68,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        201,
        35,
        12,
        93,
        17,
        97,
        0,
        192,
        87,
        128,
        99,
        232,
        24,
        60,
        68,
        17,
        97,
        0,
        116,
        87,
        128,
        99,
        236,
        87,
        28,
        106,
        17,
        97,
        0,
        89,
        87,
        128,
        99,
        236,
        87,
        28,
        106,
        20,
        97,
        3,
        88,
        87,
        128,
        99,
        237,
        110,
        163,
        58,
        20,
        97,
        3,
        120,
        87,
        128,
        99,
        246,
        175,
        232,
        143,
        20,
        97,
        3,
        151,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        232,
        24,
        60,
        68,
        20,
        97,
        3,
        24,
        87,
        128,
        99,
        234,
        12,
        222,
        133,
        20,
        97,
        3,
        56,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        221,
        117,
        124,
        52,
        17,
        97,
        0,
        165,
        87,
        128,
        99,
        221,
        117,
        124,
        52,
        20,
        97,
        2,
        177,
        87,
        128,
        99,
        221,
        172,
        93,
        193,
        20,
        97,
        2,
        198,
        87,
        128,
        99,
        225,
        154,
        190,
        248,
        20,
        97,
        2,
        248,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        201,
        35,
        12,
        93,
        20,
        97,
        2,
        135,
        87,
        128,
        99,
        207,
        199,
        226,
        218,
        20,
        97,
        2,
        156,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        36,
        33,
        225,
        85,
        17,
        97,
        1,
        23,
        87,
        128,
        99,
        63,
        227,
        52,
        122,
        17,
        97,
        0,
        252,
        87,
        128,
        99,
        63,
        227,
        52,
        122,
        20,
        97,
        2,
        19,
        87,
        128,
        99,
        177,
        195,
        148,
        34,
        20,
        97,
        2,
        47,
        87,
        128,
        99,
        194,
        212,
        22,
        1,
        20,
        97,
        2,
        96,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        36,
        33,
        225,
        85,
        20,
        97,
        1,
        198,
        87,
        128,
        99,
        48,
        244,
        156,
        172,
        20,
        97,
        1,
        243,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        219,
        241,
        159,
        20,
        97,
        1,
        73,
        87,
        128,
        99,
        6,
        57,
        76,
        155,
        20,
        97,
        1,
        96,
        87,
        128,
        99,
        11,
        169,
        89,
        9,
        20,
        97,
        1,
        128,
        87,
        128,
        99,
        23,
        109,
        231,
        168,
        20,
        97,
        1,
        164,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        52,
        128,
        21,
        97,
        1,
        85,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        3,
        170,
        86,
        91,
        0,
        91,
        52,
        128,
        21,
        97,
        1,
        108,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        1,
        123,
        54,
        96,
        4,
        97,
        15,
        189,
        86,
        91,
        97,
        4,
        46,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        140,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        84,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        52,
        128,
        21,
        97,
        1,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        185,
        97,
        4,
        223,
        86,
        91,
        96,
        64,
        81,
        97,
        1,
        155,
        145,
        144,
        97,
        18,
        74,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        210,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        128,
        81,
        128,
        130,
        1,
        144,
        145,
        82,
        96,
        4,
        129,
        82,
        99,
        6,
        198,
        246,
        247,
        96,
        228,
        27,
        96,
        32,
        130,
        1,
        82,
        97,
        1,
        185,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        255,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        2,
        14,
        54,
        96,
        4,
        97,
        15,
        189,
        86,
        91,
        97,
        5,
        101,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        31,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        0,
        96,
        64,
        81,
        97,
        1,
        155,
        145,
        144,
        97,
        18,
        34,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        59,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        0,
        84,
        97,
        2,
        80,
        144,
        96,
        1,
        96,
        160,
        27,
        144,
        4,
        96,
        255,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        155,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        108,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        117,
        97,
        5,
        242,
        86,
        91,
        96,
        64,
        81,
        96,
        255,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        155,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        147,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        185,
        97,
        6,
        111,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        168,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        3,
        84,
        97,
        1,
        145,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        189,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        6,
        180,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        210,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        2,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        155,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        4,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        3,
        19,
        54,
        96,
        4,
        97,
        15,
        189,
        86,
        91,
        97,
        7,
        44,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        36,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        3,
        51,
        54,
        96,
        4,
        97,
        17,
        100,
        86,
        91,
        97,
        7,
        134,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        68,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        3,
        83,
        54,
        96,
        4,
        97,
        15,
        218,
        86,
        91,
        97,
        8,
        25,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        100,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        0,
        84,
        97,
        2,
        224,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        132,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        5,
        84,
        96,
        1,
        96,
        160,
        27,
        144,
        4,
        96,
        255,
        22,
        97,
        2,
        80,
        86,
        91,
        97,
        1,
        94,
        97,
        3,
        165,
        54,
        96,
        4,
        97,
        16,
        139,
        86,
        91,
        97,
        8,
        145,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        3,
        213,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        96,
        255,
        96,
        160,
        27,
        25,
        22,
        96,
        1,
        96,
        160,
        27,
        144,
        129,
        23,
        145,
        130,
        144,
        85,
        96,
        64,
        81,
        127,
        165,
        255,
        225,
        96,
        30,
        185,
        58,
        127,
        239,
        208,
        208,
        238,
        181,
        252,
        148,
        162,
        246,
        84,
        117,
        243,
        51,
        131,
        111,
        226,
        184,
        127,
        215,
        187,
        245,
        149,
        32,
        105,
        146,
        97,
        4,
        36,
        146,
        144,
        4,
        96,
        255,
        22,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        4,
        89,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        145,
        22,
        20,
        21,
        97,
        4,
        136,
        87,
        96,
        64,
        81,
        99,
        54,
        161,
        195,
        63,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        5,
        128,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        71,
        33,
        18,
        158,
        14,
        103,
        110,
        214,
        169,
        41,
        9,
        187,
        36,
        232,
        83,
        204,
        221,
        99,
        173,
        114,
        40,
        12,
        194,
        233,
        116,
        227,
        142,
        72,
        14,
        14,
        110,
        84,
        144,
        96,
        0,
        144,
        162,
        80,
        86,
        91,
        96,
        6,
        84,
        96,
        64,
        128,
        81,
        99,
        149,
        216,
        155,
        65,
        96,
        224,
        27,
        129,
        82,
        144,
        81,
        96,
        96,
        146,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        145,
        99,
        149,
        216,
        155,
        65,
        145,
        96,
        4,
        128,
        131,
        1,
        146,
        96,
        0,
        146,
        145,
        144,
        130,
        144,
        3,
        1,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        5,
        36,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        5,
        56,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        0,
        130,
        62,
        96,
        31,
        61,
        144,
        129,
        1,
        96,
        31,
        25,
        22,
        130,
        1,
        96,
        64,
        82,
        97,
        5,
        96,
        145,
        144,
        129,
        1,
        144,
        97,
        16,
        20,
        86,
        91,
        144,
        80,
        144,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        5,
        144,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        144,
        129,
        82,
        127,
        190,
        24,
        8,
        145,
        126,
        9,
        129,
        79,
        202,
        125,
        128,
        40,
        154,
        151,
        96,
        164,
        6,
        95,
        16,
        214,
        36,
        172,
        26,
        238,
        11,
        159,
        144,
        60,
        79,
        93,
        146,
        177,
        144,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        86,
        91,
        96,
        6,
        84,
        96,
        64,
        128,
        81,
        99,
        49,
        60,
        229,
        103,
        96,
        224,
        27,
        129,
        82,
        144,
        81,
        96,
        0,
        146,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        145,
        99,
        49,
        60,
        229,
        103,
        145,
        96,
        4,
        128,
        131,
        1,
        146,
        96,
        32,
        146,
        145,
        144,
        130,
        144,
        3,
        1,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        6,
        55,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        6,
        75,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        5,
        96,
        145,
        144,
        97,
        17,
        134,
        86,
        91,
        96,
        6,
        84,
        96,
        64,
        128,
        81,
        99,
        6,
        253,
        222,
        3,
        96,
        224,
        27,
        129,
        82,
        144,
        81,
        96,
        96,
        146,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        145,
        99,
        6,
        253,
        222,
        3,
        145,
        96,
        4,
        128,
        131,
        1,
        146,
        96,
        0,
        146,
        145,
        144,
        130,
        144,
        3,
        1,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        5,
        36,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        6,
        223,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        96,
        255,
        96,
        160,
        27,
        25,
        22,
        144,
        129,
        144,
        85,
        96,
        64,
        81,
        127,
        165,
        255,
        225,
        96,
        30,
        185,
        58,
        127,
        239,
        208,
        208,
        238,
        181,
        252,
        148,
        162,
        246,
        84,
        117,
        243,
        51,
        131,
        111,
        226,
        184,
        127,
        215,
        187,
        245,
        149,
        32,
        105,
        145,
        97,
        4,
        36,
        145,
        96,
        1,
        96,
        160,
        27,
        144,
        145,
        4,
        96,
        255,
        22,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        7,
        87,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        2,
        128,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        144,
        146,
        22,
        145,
        144,
        145,
        23,
        144,
        85,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        7,
        177,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        129,
        129,
        17,
        21,
        97,
        7,
        210,
        87,
        96,
        64,
        81,
        99,
        96,
        3,
        232,
        33,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        4,
        130,
        144,
        85,
        96,
        3,
        129,
        144,
        85,
        96,
        64,
        128,
        81,
        131,
        129,
        82,
        96,
        32,
        129,
        1,
        131,
        144,
        82,
        127,
        118,
        51,
        0,
        76,
        122,
        34,
        152,
        105,
        174,
        234,
        16,
        219,
        79,
        243,
        229,
        126,
        59,
        21,
        52,
        174,
        178,
        201,
        231,
        44,
        93,
        178,
        95,
        150,
        88,
        149,
        195,
        48,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        80,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        8,
        68,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        5,
        128,
        84,
        130,
        21,
        21,
        96,
        1,
        96,
        160,
        27,
        2,
        96,
        255,
        96,
        160,
        27,
        25,
        144,
        145,
        22,
        23,
        144,
        85,
        96,
        64,
        81,
        127,
        205,
        22,
        44,
        111,
        194,
        66,
        133,
        191,
        190,
        57,
        158,
        192,
        204,
        44,
        226,
        195,
        128,
        173,
        39,
        210,
        235,
        31,
        202,
        65,
        140,
        101,
        45,
        241,
        37,
        126,
        126,
        9,
        144,
        97,
        5,
        231,
        144,
        131,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        160,
        27,
        144,
        4,
        96,
        255,
        22,
        21,
        97,
        8,
        188,
        87,
        96,
        64,
        81,
        99,
        14,
        47,
        66,
        201,
        96,
        227,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        3,
        84,
        129,
        81,
        16,
        21,
        97,
        8,
        224,
        87,
        96,
        64,
        81,
        99,
        97,
        122,
        177,
        45,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        4,
        84,
        129,
        81,
        17,
        21,
        97,
        9,
        4,
        87,
        96,
        64,
        81,
        99,
        6,
        37,
        4,
        1,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        97,
        9,
        29,
        130,
        96,
        64,
        1,
        81,
        131,
        96,
        0,
        1,
        81,
        132,
        96,
        96,
        1,
        81,
        97,
        9,
        138,
        86,
        91,
        144,
        80,
        128,
        130,
        96,
        32,
        1,
        81,
        20,
        97,
        9,
        67,
        87,
        96,
        64,
        81,
        99,
        1,
        191,
        170,
        37,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        9,
        76,
        51,
        97,
        10,
        178,
        86,
        91,
        21,
        97,
        9,
        106,
        87,
        96,
        64,
        81,
        99,
        46,
        112,
        192,
        177,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        9,
        134,
        130,
        96,
        0,
        1,
        81,
        131,
        96,
        32,
        1,
        81,
        132,
        96,
        160,
        1,
        81,
        133,
        96,
        128,
        1,
        81,
        97,
        11,
        79,
        86,
        91,
        80,
        80,
        86,
        91,
        96,
        0,
        127,
        48,
        100,
        78,
        114,
        225,
        49,
        160,
        41,
        184,
        80,
        69,
        182,
        129,
        129,
        88,
        93,
        40,
        51,
        232,
        72,
        121,
        185,
        112,
        145,
        67,
        225,
        245,
        147,
        240,
        0,
        0,
        1,
        128,
        133,
        16,
        97,
        9,
        205,
        87,
        96,
        64,
        81,
        99,
        128,
        95,
        42,
        73,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        128,
        131,
        111,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        16,
        97,
        9,
        255,
        87,
        96,
        64,
        81,
        99,
        59,
        189,
        224,
        191,
        96,
        226,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        1,
        84,
        96,
        64,
        128,
        81,
        96,
        96,
        129,
        1,
        130,
        82,
        135,
        129,
        82,
        96,
        32,
        129,
        1,
        135,
        144,
        82,
        111,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        134,
        22,
        129,
        131,
        1,
        82,
        144,
        81,
        99,
        4,
        185,
        142,
        29,
        96,
        227,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        146,
        22,
        145,
        99,
        37,
        204,
        112,
        232,
        145,
        97,
        10,
        87,
        145,
        96,
        4,
        1,
        97,
        17,
        241,
        86,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        10,
        111,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        10,
        131,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        10,
        167,
        145,
        144,
        97,
        17,
        75,
        86,
        91,
        145,
        80,
        80,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        84,
        96,
        1,
        96,
        160,
        27,
        144,
        4,
        96,
        255,
        22,
        97,
        10,
        204,
        87,
        80,
        96,
        0,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        84,
        96,
        64,
        81,
        99,
        223,
        89,
        47,
        125,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        144,
        145,
        22,
        144,
        99,
        223,
        89,
        47,
        125,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        11,
        17,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        11,
        37,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        11,
        73,
        145,
        144,
        97,
        15,
        247,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        160,
        129,
        1,
        130,
        82,
        133,
        129,
        82,
        96,
        32,
        129,
        1,
        133,
        144,
        82,
        96,
        0,
        129,
        131,
        1,
        129,
        144,
        82,
        96,
        96,
        130,
        1,
        133,
        144,
        82,
        96,
        128,
        130,
        1,
        132,
        144,
        82,
        96,
        2,
        84,
        146,
        81,
        99,
        120,
        214,
        12,
        215,
        96,
        224,
        27,
        129,
        82,
        145,
        146,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        145,
        99,
        120,
        214,
        12,
        215,
        145,
        97,
        11,
        169,
        145,
        133,
        145,
        144,
        96,
        4,
        1,
        97,
        18,
        93,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        11,
        195,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        11,
        215,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        96,
        2,
        84,
        97,
        11,
        253,
        146,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        80,
        97,
        11,
        246,
        133,
        136,
        97,
        19,
        60,
        86,
        91,
        96,
        0,
        97,
        12,
        4,
        86,
        91,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        128,
        52,
        20,
        97,
        12,
        88,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        19,
        96,
        36,
        130,
        1,
        82,
        127,
        98,
        114,
        105,
        100,
        103,
        101,
        32,
        102,
        101,
        101,
        32,
        109,
        105,
        115,
        109,
        97,
        116,
        99,
        104,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        6,
        84,
        97,
        12,
        112,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        133,
        133,
        97,
        12,
        117,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        129,
        22,
        96,
        36,
        131,
        1,
        82,
        132,
        22,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        128,
        130,
        1,
        132,
        144,
        82,
        130,
        81,
        128,
        131,
        3,
        144,
        145,
        1,
        129,
        82,
        96,
        132,
        144,
        145,
        1,
        144,
        145,
        82,
        96,
        32,
        129,
        1,
        128,
        81,
        123,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        99,
        35,
        184,
        114,
        221,
        96,
        224,
        27,
        23,
        144,
        82,
        97,
        12,
        228,
        144,
        133,
        144,
        97,
        12,
        234,
        86,
        91,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        13,
        63,
        130,
        96,
        64,
        81,
        128,
        96,
        64,
        1,
        96,
        64,
        82,
        128,
        96,
        32,
        129,
        82,
        96,
        32,
        1,
        127,
        83,
        97,
        102,
        101,
        69,
        82,
        67,
        50,
        48,
        58,
        32,
        108,
        111,
        119,
        45,
        108,
        101,
        118,
        101,
        108,
        32,
        99,
        97,
        108,
        108,
        32,
        102,
        97,
        105,
        108,
        101,
        100,
        129,
        82,
        80,
        133,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        13,
        207,
        144,
        146,
        145,
        144,
        99,
        255,
        255,
        255,
        255,
        22,
        86,
        91,
        128,
        81,
        144,
        145,
        80,
        21,
        97,
        12,
        112,
        87,
        128,
        128,
        96,
        32,
        1,
        144,
        81,
        129,
        1,
        144,
        97,
        13,
        93,
        145,
        144,
        97,
        15,
        247,
        86,
        91,
        97,
        12,
        112,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        42,
        96,
        36,
        130,
        1,
        82,
        127,
        83,
        97,
        102,
        101,
        69,
        82,
        67,
        50,
        48,
        58,
        32,
        69,
        82,
        67,
        50,
        48,
        32,
        111,
        112,
        101,
        114,
        97,
        116,
        105,
        111,
        110,
        32,
        100,
        105,
        100,
        32,
        110,
        96,
        68,
        130,
        1,
        82,
        127,
        111,
        116,
        32,
        115,
        117,
        99,
        99,
        101,
        101,
        100,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        12,
        79,
        86,
        91,
        96,
        96,
        97,
        13,
        222,
        132,
        132,
        96,
        0,
        133,
        97,
        13,
        230,
        86,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        130,
        71,
        16,
        21,
        97,
        14,
        94,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        38,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        32,
        98,
        97,
        108,
        97,
        110,
        99,
        101,
        32,
        102,
        111,
        96,
        68,
        130,
        1,
        82,
        127,
        114,
        32,
        99,
        97,
        108,
        108,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        12,
        79,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        59,
        97,
        14,
        181,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        29,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        99,
        97,
        108,
        108,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        45,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        12,
        79,
        86,
        91,
        96,
        0,
        128,
        134,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        133,
        135,
        96,
        64,
        81,
        97,
        14,
        209,
        145,
        144,
        97,
        17,
        213,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        133,
        135,
        90,
        241,
        146,
        80,
        80,
        80,
        61,
        128,
        96,
        0,
        129,
        20,
        97,
        15,
        14,
        87,
        96,
        64,
        81,
        145,
        80,
        96,
        31,
        25,
        96,
        63,
        61,
        1,
        22,
        130,
        1,
        96,
        64,
        82,
        61,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        97,
        15,
        19,
        86,
        91,
        96,
        96,
        145,
        80,
        91,
        80,
        145,
        80,
        145,
        80,
        97,
        15,
        35,
        130,
        130,
        134,
        97,
        15,
        46,
        86,
        91,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        131,
        21,
        97,
        15,
        61,
        87,
        80,
        129,
        97,
        10,
        171,
        86,
        91,
        130,
        81,
        21,
        97,
        15,
        77,
        87,
        130,
        81,
        128,
        132,
        96,
        32,
        1,
        253,
        91,
        129,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        12,
        79,
        145,
        144,
        97,
        18,
        74,
        86,
        91,
        96,
        0,
        130,
        96,
        31,
        131,
        1,
        18,
        97,
        15,
        120,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        15,
        139,
        97,
        15,
        134,
        130,
        97,
        19,
        20,
        86,
        91,
        97,
        18,
        227,
        86,
        91,
        129,
        129,
        82,
        132,
        96,
        32,
        131,
        134,
        1,
        1,
        17,
        21,
        97,
        15,
        160,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        96,
        32,
        133,
        1,
        96,
        32,
        131,
        1,
        55,
        96,
        0,
        145,
        129,
        1,
        96,
        32,
        1,
        145,
        144,
        145,
        82,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        15,
        207,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        10,
        171,
        129,
        97,
        19,
        164,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        15,
        236,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        10,
        171,
        129,
        97,
        19,
        188,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        16,
        9,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        97,
        10,
        171,
        129,
        97,
        19,
        188,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        16,
        38,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        16,
        61,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        1,
        96,
        31,
        129,
        1,
        132,
        19,
        97,
        16,
        78,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        81,
        97,
        16,
        92,
        97,
        15,
        134,
        130,
        97,
        19,
        20,
        86,
        91,
        129,
        129,
        82,
        133,
        96,
        32,
        131,
        133,
        1,
        1,
        17,
        21,
        97,
        16,
        113,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        16,
        130,
        130,
        96,
        32,
        131,
        1,
        96,
        32,
        134,
        1,
        97,
        19,
        98,
        86,
        91,
        149,
        148,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        16,
        157,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        16,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        144,
        131,
        1,
        144,
        96,
        192,
        130,
        134,
        3,
        18,
        21,
        97,
        16,
        201,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        16,
        209,
        97,
        18,
        186,
        86,
        91,
        130,
        53,
        129,
        82,
        96,
        32,
        131,
        1,
        53,
        96,
        32,
        130,
        1,
        82,
        96,
        64,
        131,
        1,
        53,
        96,
        64,
        130,
        1,
        82,
        96,
        96,
        131,
        1,
        53,
        111,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        17,
        12,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        131,
        1,
        53,
        130,
        129,
        17,
        21,
        97,
        17,
        35,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        17,
        47,
        135,
        130,
        134,
        1,
        97,
        15,
        103,
        86,
        91,
        96,
        128,
        131,
        1,
        82,
        80,
        96,
        160,
        131,
        1,
        53,
        96,
        160,
        130,
        1,
        82,
        128,
        147,
        80,
        80,
        80,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        17,
        93,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        17,
        119,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        80,
        128,
        53,
        146,
        96,
        32,
        144,
        145,
        1,
        53,
        145,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        17,
        152,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        96,
        255,
        129,
        22,
        129,
        20,
        97,
        10,
        171,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        129,
        81,
        128,
        132,
        82,
        97,
        17,
        193,
        129,
        96,
        32,
        134,
        1,
        96,
        32,
        134,
        1,
        97,
        19,
        98,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        146,
        144,
        146,
        1,
        96,
        32,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        81,
        97,
        17,
        231,
        129,
        132,
        96,
        32,
        135,
        1,
        97,
        19,
        98,
        86,
        91,
        145,
        144,
        145,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        96,
        129,
        1,
        129,
        131,
        96,
        0,
        91,
        96,
        3,
        129,
        16,
        21,
        97,
        18,
        25,
        87,
        129,
        81,
        131,
        82,
        96,
        32,
        146,
        131,
        1,
        146,
        144,
        145,
        1,
        144,
        96,
        1,
        1,
        97,
        17,
        250,
        86,
        91,
        80,
        80,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        1,
        96,
        2,
        131,
        16,
        97,
        18,
        68,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        145,
        144,
        82,
        144,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        97,
        10,
        171,
        96,
        32,
        131,
        1,
        132,
        97,
        17,
        169,
        86,
        91,
        96,
        64,
        129,
        82,
        130,
        81,
        96,
        64,
        130,
        1,
        82,
        96,
        32,
        131,
        1,
        81,
        96,
        96,
        130,
        1,
        82,
        96,
        64,
        131,
        1,
        81,
        96,
        128,
        130,
        1,
        82,
        96,
        96,
        131,
        1,
        81,
        96,
        160,
        130,
        1,
        82,
        96,
        0,
        96,
        128,
        132,
        1,
        81,
        96,
        160,
        96,
        192,
        132,
        1,
        82,
        97,
        18,
        161,
        96,
        224,
        132,
        1,
        130,
        97,
        17,
        169,
        86,
        91,
        145,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        32,
        131,
        1,
        82,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        64,
        81,
        96,
        192,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        18,
        221,
        87,
        97,
        18,
        221,
        97,
        19,
        142,
        86,
        91,
        96,
        64,
        82,
        144,
        86,
        91,
        96,
        64,
        81,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        22,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        19,
        12,
        87,
        97,
        19,
        12,
        97,
        19,
        142,
        86,
        91,
        96,
        64,
        82,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        130,
        17,
        21,
        97,
        19,
        46,
        87,
        97,
        19,
        46,
        97,
        19,
        142,
        86,
        91,
        80,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        0,
        130,
        25,
        130,
        17,
        21,
        97,
        19,
        93,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        1,
        144,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        19,
        125,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        19,
        101,
        86,
        91,
        131,
        129,
        17,
        21,
        97,
        12,
        228,
        87,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        19,
        185,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        86,
        91,
        128,
        21,
        21,
        129,
        20,
        97,
        19,
        185,
        87,
        96,
        0,
        128,
        253,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        92,
        219,
        227,
        91,
        215,
        73,
        94,
        203,
        34,
        126,
        79,
        39,
        4,
        63,
        249,
        135,
        7,
        199,
        254,
        225,
        132,
        206,
        46,
        177,
        141,
        246,
        244,
        5,
        128,
        38,
        203,
        180,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        7,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static MYSTIKOV2LOOPERC20_BYTECODE: ::ethers_core::types::Bytes =
        ::ethers_core::types::Bytes::from_static(__BYTECODE);
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        96,
        4,
        54,
        16,
        97,
        1,
        68,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        201,
        35,
        12,
        93,
        17,
        97,
        0,
        192,
        87,
        128,
        99,
        232,
        24,
        60,
        68,
        17,
        97,
        0,
        116,
        87,
        128,
        99,
        236,
        87,
        28,
        106,
        17,
        97,
        0,
        89,
        87,
        128,
        99,
        236,
        87,
        28,
        106,
        20,
        97,
        3,
        88,
        87,
        128,
        99,
        237,
        110,
        163,
        58,
        20,
        97,
        3,
        120,
        87,
        128,
        99,
        246,
        175,
        232,
        143,
        20,
        97,
        3,
        151,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        232,
        24,
        60,
        68,
        20,
        97,
        3,
        24,
        87,
        128,
        99,
        234,
        12,
        222,
        133,
        20,
        97,
        3,
        56,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        221,
        117,
        124,
        52,
        17,
        97,
        0,
        165,
        87,
        128,
        99,
        221,
        117,
        124,
        52,
        20,
        97,
        2,
        177,
        87,
        128,
        99,
        221,
        172,
        93,
        193,
        20,
        97,
        2,
        198,
        87,
        128,
        99,
        225,
        154,
        190,
        248,
        20,
        97,
        2,
        248,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        201,
        35,
        12,
        93,
        20,
        97,
        2,
        135,
        87,
        128,
        99,
        207,
        199,
        226,
        218,
        20,
        97,
        2,
        156,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        36,
        33,
        225,
        85,
        17,
        97,
        1,
        23,
        87,
        128,
        99,
        63,
        227,
        52,
        122,
        17,
        97,
        0,
        252,
        87,
        128,
        99,
        63,
        227,
        52,
        122,
        20,
        97,
        2,
        19,
        87,
        128,
        99,
        177,
        195,
        148,
        34,
        20,
        97,
        2,
        47,
        87,
        128,
        99,
        194,
        212,
        22,
        1,
        20,
        97,
        2,
        96,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        36,
        33,
        225,
        85,
        20,
        97,
        1,
        198,
        87,
        128,
        99,
        48,
        244,
        156,
        172,
        20,
        97,
        1,
        243,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        219,
        241,
        159,
        20,
        97,
        1,
        73,
        87,
        128,
        99,
        6,
        57,
        76,
        155,
        20,
        97,
        1,
        96,
        87,
        128,
        99,
        11,
        169,
        89,
        9,
        20,
        97,
        1,
        128,
        87,
        128,
        99,
        23,
        109,
        231,
        168,
        20,
        97,
        1,
        164,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        52,
        128,
        21,
        97,
        1,
        85,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        3,
        170,
        86,
        91,
        0,
        91,
        52,
        128,
        21,
        97,
        1,
        108,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        1,
        123,
        54,
        96,
        4,
        97,
        15,
        189,
        86,
        91,
        97,
        4,
        46,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        140,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        84,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        52,
        128,
        21,
        97,
        1,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        185,
        97,
        4,
        223,
        86,
        91,
        96,
        64,
        81,
        97,
        1,
        155,
        145,
        144,
        97,
        18,
        74,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        210,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        128,
        81,
        128,
        130,
        1,
        144,
        145,
        82,
        96,
        4,
        129,
        82,
        99,
        6,
        198,
        246,
        247,
        96,
        228,
        27,
        96,
        32,
        130,
        1,
        82,
        97,
        1,
        185,
        86,
        91,
        52,
        128,
        21,
        97,
        1,
        255,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        2,
        14,
        54,
        96,
        4,
        97,
        15,
        189,
        86,
        91,
        97,
        5,
        101,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        31,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        0,
        96,
        64,
        81,
        97,
        1,
        155,
        145,
        144,
        97,
        18,
        34,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        59,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        0,
        84,
        97,
        2,
        80,
        144,
        96,
        1,
        96,
        160,
        27,
        144,
        4,
        96,
        255,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        155,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        108,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        2,
        117,
        97,
        5,
        242,
        86,
        91,
        96,
        64,
        81,
        96,
        255,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        155,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        147,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        185,
        97,
        6,
        111,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        168,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        3,
        84,
        97,
        1,
        145,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        189,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        6,
        180,
        86,
        91,
        52,
        128,
        21,
        97,
        2,
        210,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        2,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        155,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        4,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        3,
        19,
        54,
        96,
        4,
        97,
        15,
        189,
        86,
        91,
        97,
        7,
        44,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        36,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        3,
        51,
        54,
        96,
        4,
        97,
        17,
        100,
        86,
        91,
        97,
        7,
        134,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        68,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        1,
        94,
        97,
        3,
        83,
        54,
        96,
        4,
        97,
        15,
        218,
        86,
        91,
        97,
        8,
        25,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        100,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        0,
        84,
        97,
        2,
        224,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        52,
        128,
        21,
        97,
        3,
        132,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        5,
        84,
        96,
        1,
        96,
        160,
        27,
        144,
        4,
        96,
        255,
        22,
        97,
        2,
        80,
        86,
        91,
        97,
        1,
        94,
        97,
        3,
        165,
        54,
        96,
        4,
        97,
        16,
        139,
        86,
        91,
        97,
        8,
        145,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        3,
        213,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        96,
        255,
        96,
        160,
        27,
        25,
        22,
        96,
        1,
        96,
        160,
        27,
        144,
        129,
        23,
        145,
        130,
        144,
        85,
        96,
        64,
        81,
        127,
        165,
        255,
        225,
        96,
        30,
        185,
        58,
        127,
        239,
        208,
        208,
        238,
        181,
        252,
        148,
        162,
        246,
        84,
        117,
        243,
        51,
        131,
        111,
        226,
        184,
        127,
        215,
        187,
        245,
        149,
        32,
        105,
        146,
        97,
        4,
        36,
        146,
        144,
        4,
        96,
        255,
        22,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        4,
        89,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        145,
        22,
        20,
        21,
        97,
        4,
        136,
        87,
        96,
        64,
        81,
        99,
        54,
        161,
        195,
        63,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        5,
        128,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        71,
        33,
        18,
        158,
        14,
        103,
        110,
        214,
        169,
        41,
        9,
        187,
        36,
        232,
        83,
        204,
        221,
        99,
        173,
        114,
        40,
        12,
        194,
        233,
        116,
        227,
        142,
        72,
        14,
        14,
        110,
        84,
        144,
        96,
        0,
        144,
        162,
        80,
        86,
        91,
        96,
        6,
        84,
        96,
        64,
        128,
        81,
        99,
        149,
        216,
        155,
        65,
        96,
        224,
        27,
        129,
        82,
        144,
        81,
        96,
        96,
        146,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        145,
        99,
        149,
        216,
        155,
        65,
        145,
        96,
        4,
        128,
        131,
        1,
        146,
        96,
        0,
        146,
        145,
        144,
        130,
        144,
        3,
        1,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        5,
        36,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        5,
        56,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        0,
        130,
        62,
        96,
        31,
        61,
        144,
        129,
        1,
        96,
        31,
        25,
        22,
        130,
        1,
        96,
        64,
        82,
        97,
        5,
        96,
        145,
        144,
        129,
        1,
        144,
        97,
        16,
        20,
        86,
        91,
        144,
        80,
        144,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        5,
        144,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        144,
        129,
        82,
        127,
        190,
        24,
        8,
        145,
        126,
        9,
        129,
        79,
        202,
        125,
        128,
        40,
        154,
        151,
        96,
        164,
        6,
        95,
        16,
        214,
        36,
        172,
        26,
        238,
        11,
        159,
        144,
        60,
        79,
        93,
        146,
        177,
        144,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        86,
        91,
        96,
        6,
        84,
        96,
        64,
        128,
        81,
        99,
        49,
        60,
        229,
        103,
        96,
        224,
        27,
        129,
        82,
        144,
        81,
        96,
        0,
        146,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        145,
        99,
        49,
        60,
        229,
        103,
        145,
        96,
        4,
        128,
        131,
        1,
        146,
        96,
        32,
        146,
        145,
        144,
        130,
        144,
        3,
        1,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        6,
        55,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        6,
        75,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        5,
        96,
        145,
        144,
        97,
        17,
        134,
        86,
        91,
        96,
        6,
        84,
        96,
        64,
        128,
        81,
        99,
        6,
        253,
        222,
        3,
        96,
        224,
        27,
        129,
        82,
        144,
        81,
        96,
        96,
        146,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        145,
        99,
        6,
        253,
        222,
        3,
        145,
        96,
        4,
        128,
        131,
        1,
        146,
        96,
        0,
        146,
        145,
        144,
        130,
        144,
        3,
        1,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        5,
        36,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        6,
        223,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        128,
        84,
        96,
        255,
        96,
        160,
        27,
        25,
        22,
        144,
        129,
        144,
        85,
        96,
        64,
        81,
        127,
        165,
        255,
        225,
        96,
        30,
        185,
        58,
        127,
        239,
        208,
        208,
        238,
        181,
        252,
        148,
        162,
        246,
        84,
        117,
        243,
        51,
        131,
        111,
        226,
        184,
        127,
        215,
        187,
        245,
        149,
        32,
        105,
        145,
        97,
        4,
        36,
        145,
        96,
        1,
        96,
        160,
        27,
        144,
        145,
        4,
        96,
        255,
        22,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        7,
        87,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        2,
        128,
        84,
        115,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        144,
        146,
        22,
        145,
        144,
        145,
        23,
        144,
        85,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        7,
        177,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        129,
        129,
        17,
        21,
        97,
        7,
        210,
        87,
        96,
        64,
        81,
        99,
        96,
        3,
        232,
        33,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        4,
        130,
        144,
        85,
        96,
        3,
        129,
        144,
        85,
        96,
        64,
        128,
        81,
        131,
        129,
        82,
        96,
        32,
        129,
        1,
        131,
        144,
        82,
        127,
        118,
        51,
        0,
        76,
        122,
        34,
        152,
        105,
        174,
        234,
        16,
        219,
        79,
        243,
        229,
        126,
        59,
        21,
        52,
        174,
        178,
        201,
        231,
        44,
        93,
        178,
        95,
        150,
        88,
        149,
        195,
        48,
        145,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        161,
        80,
        80,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        20,
        97,
        8,
        68,
        87,
        96,
        64,
        81,
        99,
        39,
        225,
        241,
        229,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        5,
        128,
        84,
        130,
        21,
        21,
        96,
        1,
        96,
        160,
        27,
        2,
        96,
        255,
        96,
        160,
        27,
        25,
        144,
        145,
        22,
        23,
        144,
        85,
        96,
        64,
        81,
        127,
        205,
        22,
        44,
        111,
        194,
        66,
        133,
        191,
        190,
        57,
        158,
        192,
        204,
        44,
        226,
        195,
        128,
        173,
        39,
        210,
        235,
        31,
        202,
        65,
        140,
        101,
        45,
        241,
        37,
        126,
        126,
        9,
        144,
        97,
        5,
        231,
        144,
        131,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        160,
        27,
        144,
        4,
        96,
        255,
        22,
        21,
        97,
        8,
        188,
        87,
        96,
        64,
        81,
        99,
        14,
        47,
        66,
        201,
        96,
        227,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        3,
        84,
        129,
        81,
        16,
        21,
        97,
        8,
        224,
        87,
        96,
        64,
        81,
        99,
        97,
        122,
        177,
        45,
        96,
        225,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        4,
        84,
        129,
        81,
        17,
        21,
        97,
        9,
        4,
        87,
        96,
        64,
        81,
        99,
        6,
        37,
        4,
        1,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        97,
        9,
        29,
        130,
        96,
        64,
        1,
        81,
        131,
        96,
        0,
        1,
        81,
        132,
        96,
        96,
        1,
        81,
        97,
        9,
        138,
        86,
        91,
        144,
        80,
        128,
        130,
        96,
        32,
        1,
        81,
        20,
        97,
        9,
        67,
        87,
        96,
        64,
        81,
        99,
        1,
        191,
        170,
        37,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        9,
        76,
        51,
        97,
        10,
        178,
        86,
        91,
        21,
        97,
        9,
        106,
        87,
        96,
        64,
        81,
        99,
        46,
        112,
        192,
        177,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        9,
        134,
        130,
        96,
        0,
        1,
        81,
        131,
        96,
        32,
        1,
        81,
        132,
        96,
        160,
        1,
        81,
        133,
        96,
        128,
        1,
        81,
        97,
        11,
        79,
        86,
        91,
        80,
        80,
        86,
        91,
        96,
        0,
        127,
        48,
        100,
        78,
        114,
        225,
        49,
        160,
        41,
        184,
        80,
        69,
        182,
        129,
        129,
        88,
        93,
        40,
        51,
        232,
        72,
        121,
        185,
        112,
        145,
        67,
        225,
        245,
        147,
        240,
        0,
        0,
        1,
        128,
        133,
        16,
        97,
        9,
        205,
        87,
        96,
        64,
        81,
        99,
        128,
        95,
        42,
        73,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        128,
        131,
        111,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        16,
        97,
        9,
        255,
        87,
        96,
        64,
        81,
        99,
        59,
        189,
        224,
        191,
        96,
        226,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        1,
        84,
        96,
        64,
        128,
        81,
        96,
        96,
        129,
        1,
        130,
        82,
        135,
        129,
        82,
        96,
        32,
        129,
        1,
        135,
        144,
        82,
        111,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        134,
        22,
        129,
        131,
        1,
        82,
        144,
        81,
        99,
        4,
        185,
        142,
        29,
        96,
        227,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        146,
        22,
        145,
        99,
        37,
        204,
        112,
        232,
        145,
        97,
        10,
        87,
        145,
        96,
        4,
        1,
        97,
        17,
        241,
        86,
        91,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        10,
        111,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        10,
        131,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        10,
        167,
        145,
        144,
        97,
        17,
        75,
        86,
        91,
        145,
        80,
        80,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        84,
        96,
        1,
        96,
        160,
        27,
        144,
        4,
        96,
        255,
        22,
        97,
        10,
        204,
        87,
        80,
        96,
        0,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        84,
        96,
        64,
        81,
        99,
        223,
        89,
        47,
        125,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        144,
        145,
        22,
        144,
        99,
        223,
        89,
        47,
        125,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        128,
        59,
        21,
        128,
        21,
        97,
        11,
        17,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        250,
        21,
        128,
        21,
        97,
        11,
        37,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        11,
        73,
        145,
        144,
        97,
        15,
        247,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        160,
        129,
        1,
        130,
        82,
        133,
        129,
        82,
        96,
        32,
        129,
        1,
        133,
        144,
        82,
        96,
        0,
        129,
        131,
        1,
        129,
        144,
        82,
        96,
        96,
        130,
        1,
        133,
        144,
        82,
        96,
        128,
        130,
        1,
        132,
        144,
        82,
        96,
        2,
        84,
        146,
        81,
        99,
        120,
        214,
        12,
        215,
        96,
        224,
        27,
        129,
        82,
        145,
        146,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        145,
        99,
        120,
        214,
        12,
        215,
        145,
        97,
        11,
        169,
        145,
        133,
        145,
        144,
        96,
        4,
        1,
        97,
        18,
        93,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        96,
        0,
        135,
        128,
        59,
        21,
        128,
        21,
        97,
        11,
        195,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        90,
        241,
        21,
        128,
        21,
        97,
        11,
        215,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        96,
        2,
        84,
        97,
        11,
        253,
        146,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        144,
        80,
        97,
        11,
        246,
        133,
        136,
        97,
        19,
        60,
        86,
        91,
        96,
        0,
        97,
        12,
        4,
        86,
        91,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        128,
        52,
        20,
        97,
        12,
        88,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        19,
        96,
        36,
        130,
        1,
        82,
        127,
        98,
        114,
        105,
        100,
        103,
        101,
        32,
        102,
        101,
        101,
        32,
        109,
        105,
        115,
        109,
        97,
        116,
        99,
        104,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        6,
        84,
        97,
        12,
        112,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        51,
        133,
        133,
        97,
        12,
        117,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        129,
        22,
        96,
        36,
        131,
        1,
        82,
        132,
        22,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        128,
        130,
        1,
        132,
        144,
        82,
        130,
        81,
        128,
        131,
        3,
        144,
        145,
        1,
        129,
        82,
        96,
        132,
        144,
        145,
        1,
        144,
        145,
        82,
        96,
        32,
        129,
        1,
        128,
        81,
        123,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        22,
        99,
        35,
        184,
        114,
        221,
        96,
        224,
        27,
        23,
        144,
        82,
        97,
        12,
        228,
        144,
        133,
        144,
        97,
        12,
        234,
        86,
        91,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        13,
        63,
        130,
        96,
        64,
        81,
        128,
        96,
        64,
        1,
        96,
        64,
        82,
        128,
        96,
        32,
        129,
        82,
        96,
        32,
        1,
        127,
        83,
        97,
        102,
        101,
        69,
        82,
        67,
        50,
        48,
        58,
        32,
        108,
        111,
        119,
        45,
        108,
        101,
        118,
        101,
        108,
        32,
        99,
        97,
        108,
        108,
        32,
        102,
        97,
        105,
        108,
        101,
        100,
        129,
        82,
        80,
        133,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        97,
        13,
        207,
        144,
        146,
        145,
        144,
        99,
        255,
        255,
        255,
        255,
        22,
        86,
        91,
        128,
        81,
        144,
        145,
        80,
        21,
        97,
        12,
        112,
        87,
        128,
        128,
        96,
        32,
        1,
        144,
        81,
        129,
        1,
        144,
        97,
        13,
        93,
        145,
        144,
        97,
        15,
        247,
        86,
        91,
        97,
        12,
        112,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        42,
        96,
        36,
        130,
        1,
        82,
        127,
        83,
        97,
        102,
        101,
        69,
        82,
        67,
        50,
        48,
        58,
        32,
        69,
        82,
        67,
        50,
        48,
        32,
        111,
        112,
        101,
        114,
        97,
        116,
        105,
        111,
        110,
        32,
        100,
        105,
        100,
        32,
        110,
        96,
        68,
        130,
        1,
        82,
        127,
        111,
        116,
        32,
        115,
        117,
        99,
        99,
        101,
        101,
        100,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        12,
        79,
        86,
        91,
        96,
        96,
        97,
        13,
        222,
        132,
        132,
        96,
        0,
        133,
        97,
        13,
        230,
        86,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        130,
        71,
        16,
        21,
        97,
        14,
        94,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        38,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        32,
        98,
        97,
        108,
        97,
        110,
        99,
        101,
        32,
        102,
        111,
        96,
        68,
        130,
        1,
        82,
        127,
        114,
        32,
        99,
        97,
        108,
        108,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        12,
        79,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        59,
        97,
        14,
        181,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        29,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        100,
        100,
        114,
        101,
        115,
        115,
        58,
        32,
        99,
        97,
        108,
        108,
        32,
        116,
        111,
        32,
        110,
        111,
        110,
        45,
        99,
        111,
        110,
        116,
        114,
        97,
        99,
        116,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        12,
        79,
        86,
        91,
        96,
        0,
        128,
        134,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        133,
        135,
        96,
        64,
        81,
        97,
        14,
        209,
        145,
        144,
        97,
        17,
        213,
        86,
        91,
        96,
        0,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        133,
        135,
        90,
        241,
        146,
        80,
        80,
        80,
        61,
        128,
        96,
        0,
        129,
        20,
        97,
        15,
        14,
        87,
        96,
        64,
        81,
        145,
        80,
        96,
        31,
        25,
        96,
        63,
        61,
        1,
        22,
        130,
        1,
        96,
        64,
        82,
        61,
        130,
        82,
        61,
        96,
        0,
        96,
        32,
        132,
        1,
        62,
        97,
        15,
        19,
        86,
        91,
        96,
        96,
        145,
        80,
        91,
        80,
        145,
        80,
        145,
        80,
        97,
        15,
        35,
        130,
        130,
        134,
        97,
        15,
        46,
        86,
        91,
        151,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        96,
        131,
        21,
        97,
        15,
        61,
        87,
        80,
        129,
        97,
        10,
        171,
        86,
        91,
        130,
        81,
        21,
        97,
        15,
        77,
        87,
        130,
        81,
        128,
        132,
        96,
        32,
        1,
        253,
        91,
        129,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        4,
        1,
        97,
        12,
        79,
        145,
        144,
        97,
        18,
        74,
        86,
        91,
        96,
        0,
        130,
        96,
        31,
        131,
        1,
        18,
        97,
        15,
        120,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        15,
        139,
        97,
        15,
        134,
        130,
        97,
        19,
        20,
        86,
        91,
        97,
        18,
        227,
        86,
        91,
        129,
        129,
        82,
        132,
        96,
        32,
        131,
        134,
        1,
        1,
        17,
        21,
        97,
        15,
        160,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        96,
        32,
        133,
        1,
        96,
        32,
        131,
        1,
        55,
        96,
        0,
        145,
        129,
        1,
        96,
        32,
        1,
        145,
        144,
        145,
        82,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        15,
        207,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        10,
        171,
        129,
        97,
        19,
        164,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        15,
        236,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        10,
        171,
        129,
        97,
        19,
        188,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        16,
        9,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        97,
        10,
        171,
        129,
        97,
        19,
        188,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        16,
        38,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        16,
        61,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        1,
        96,
        31,
        129,
        1,
        132,
        19,
        97,
        16,
        78,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        81,
        97,
        16,
        92,
        97,
        15,
        134,
        130,
        97,
        19,
        20,
        86,
        91,
        129,
        129,
        82,
        133,
        96,
        32,
        131,
        133,
        1,
        1,
        17,
        21,
        97,
        16,
        113,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        16,
        130,
        130,
        96,
        32,
        131,
        1,
        96,
        32,
        134,
        1,
        97,
        19,
        98,
        86,
        91,
        149,
        148,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        16,
        157,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        16,
        181,
        87,
        96,
        0,
        128,
        253,
        91,
        144,
        131,
        1,
        144,
        96,
        192,
        130,
        134,
        3,
        18,
        21,
        97,
        16,
        201,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        16,
        209,
        97,
        18,
        186,
        86,
        91,
        130,
        53,
        129,
        82,
        96,
        32,
        131,
        1,
        53,
        96,
        32,
        130,
        1,
        82,
        96,
        64,
        131,
        1,
        53,
        96,
        64,
        130,
        1,
        82,
        96,
        96,
        131,
        1,
        53,
        111,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        22,
        129,
        20,
        97,
        17,
        12,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        131,
        1,
        53,
        130,
        129,
        17,
        21,
        97,
        17,
        35,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        17,
        47,
        135,
        130,
        134,
        1,
        97,
        15,
        103,
        86,
        91,
        96,
        128,
        131,
        1,
        82,
        80,
        96,
        160,
        131,
        1,
        53,
        96,
        160,
        130,
        1,
        82,
        128,
        147,
        80,
        80,
        80,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        17,
        93,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        17,
        119,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        80,
        128,
        53,
        146,
        96,
        32,
        144,
        145,
        1,
        53,
        145,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        17,
        152,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        96,
        255,
        129,
        22,
        129,
        20,
        97,
        10,
        171,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        129,
        81,
        128,
        132,
        82,
        97,
        17,
        193,
        129,
        96,
        32,
        134,
        1,
        96,
        32,
        134,
        1,
        97,
        19,
        98,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        146,
        144,
        146,
        1,
        96,
        32,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        81,
        97,
        17,
        231,
        129,
        132,
        96,
        32,
        135,
        1,
        97,
        19,
        98,
        86,
        91,
        145,
        144,
        145,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        96,
        129,
        1,
        129,
        131,
        96,
        0,
        91,
        96,
        3,
        129,
        16,
        21,
        97,
        18,
        25,
        87,
        129,
        81,
        131,
        82,
        96,
        32,
        146,
        131,
        1,
        146,
        144,
        145,
        1,
        144,
        96,
        1,
        1,
        97,
        17,
        250,
        86,
        91,
        80,
        80,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        1,
        96,
        2,
        131,
        16,
        97,
        18,
        68,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        145,
        144,
        82,
        144,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        97,
        10,
        171,
        96,
        32,
        131,
        1,
        132,
        97,
        17,
        169,
        86,
        91,
        96,
        64,
        129,
        82,
        130,
        81,
        96,
        64,
        130,
        1,
        82,
        96,
        32,
        131,
        1,
        81,
        96,
        96,
        130,
        1,
        82,
        96,
        64,
        131,
        1,
        81,
        96,
        128,
        130,
        1,
        82,
        96,
        96,
        131,
        1,
        81,
        96,
        160,
        130,
        1,
        82,
        96,
        0,
        96,
        128,
        132,
        1,
        81,
        96,
        160,
        96,
        192,
        132,
        1,
        82,
        97,
        18,
        161,
        96,
        224,
        132,
        1,
        130,
        97,
        17,
        169,
        86,
        91,
        145,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        32,
        131,
        1,
        82,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        64,
        81,
        96,
        192,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        18,
        221,
        87,
        97,
        18,
        221,
        97,
        19,
        142,
        86,
        91,
        96,
        64,
        82,
        144,
        86,
        91,
        96,
        64,
        81,
        96,
        31,
        130,
        1,
        96,
        31,
        25,
        22,
        129,
        1,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        130,
        130,
        16,
        23,
        21,
        97,
        19,
        12,
        87,
        97,
        19,
        12,
        97,
        19,
        142,
        86,
        91,
        96,
        64,
        82,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        130,
        17,
        21,
        97,
        19,
        46,
        87,
        97,
        19,
        46,
        97,
        19,
        142,
        86,
        91,
        80,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        144,
        86,
        91,
        96,
        0,
        130,
        25,
        130,
        17,
        21,
        97,
        19,
        93,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        1,
        144,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        19,
        125,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        19,
        101,
        86,
        91,
        131,
        129,
        17,
        21,
        97,
        12,
        228,
        87,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        19,
        185,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        86,
        91,
        128,
        21,
        21,
        129,
        20,
        97,
        19,
        185,
        87,
        96,
        0,
        128,
        253,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        92,
        219,
        227,
        91,
        215,
        73,
        94,
        203,
        34,
        126,
        79,
        39,
        4,
        63,
        249,
        135,
        7,
        199,
        254,
        225,
        132,
        206,
        46,
        177,
        141,
        246,
        244,
        5,
        128,
        38,
        203,
        180,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        7,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static MYSTIKOV2LOOPERC20_DEPLOYED_BYTECODE: ::ethers_core::types::Bytes =
        ::ethers_core::types::Bytes::from_static(__DEPLOYED_BYTECODE);
    pub struct MystikoV2LoopERC20<M>(::ethers_contract::Contract<M>);
    impl<M> ::core::clone::Clone for MystikoV2LoopERC20<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for MystikoV2LoopERC20<M> {
        type Target = ::ethers_contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for MystikoV2LoopERC20<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for MystikoV2LoopERC20<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(MystikoV2LoopERC20))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers_providers::Middleware> MystikoV2LoopERC20<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers_core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(::ethers_contract::Contract::new(
                address.into(),
                MYSTIKOV2LOOPERC20_ABI.clone(),
                client,
            ))
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers_core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers_contract::builders::ContractDeployer<M, Self>,
            ::ethers_contract::ContractError<M>,
        > {
            let factory = ::ethers_contract::ContractFactory::new(
                MYSTIKOV2LOOPERC20_ABI.clone(),
                MYSTIKOV2LOOPERC20_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers_contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `assetDecimals` (0xc2d41601) function
        pub fn asset_decimals(&self) -> ::ethers_contract::builders::ContractCall<M, u8> {
            self.0
                .method_hash([194, 212, 22, 1], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `assetName` (0xc9230c5d) function
        pub fn asset_name(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::std::string::String> {
            self.0
                .method_hash([201, 35, 12, 93], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `assetSymbol` (0x176de7a8) function
        pub fn asset_symbol(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::std::string::String> {
            self.0
                .method_hash([23, 109, 231, 168], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `assetType` (0x3fe3347a) function
        pub fn asset_type(&self) -> ::ethers_contract::builders::ContractCall<M, u8> {
            self.0
                .method_hash([63, 227, 52, 122], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `bridgeType` (0x2421e155) function
        pub fn bridge_type(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::std::string::String> {
            self.0
                .method_hash([36, 33, 225, 85], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `changeOperator` (0x06394c9b) function
        pub fn change_operator(
            &self,
            new_operator: ::ethers_core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([6, 57, 76, 155], new_operator)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `deposit` (0xf6afe88f) function
        pub fn deposit(
            &self,
            request: DepositRequest,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([246, 175, 232, 143], (request,))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `disableSanctionsCheck` (0xdd757c34) function
        pub fn disable_sanctions_check(&self) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([221, 117, 124, 52], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `enableSanctionsCheck` (0x01dbf19f) function
        pub fn enable_sanctions_check(&self) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([1, 219, 241, 159], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getAssociatedCommitmentPool` (0xddac5dc1) function
        pub fn get_associated_commitment_pool(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::Address> {
            self.0
                .method_hash([221, 172, 93, 193], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getMaxAmount` (0x0ba95909) function
        pub fn get_max_amount(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::U256> {
            self.0
                .method_hash([11, 169, 89, 9], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getMinAmount` (0xcfc7e2da) function
        pub fn get_min_amount(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::U256> {
            self.0
                .method_hash([207, 199, 226, 218], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `isDepositsDisabled` (0xed6ea33a) function
        pub fn is_deposits_disabled(&self) -> ::ethers_contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([237, 110, 163, 58], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `sanctionsCheck` (0xb1c39422) function
        pub fn sanctions_check(&self) -> ::ethers_contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([177, 195, 148, 34], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `sanctionsList` (0xec571c6a) function
        pub fn sanctions_list(
            &self,
        ) -> ::ethers_contract::builders::ContractCall<M, ::ethers_core::types::Address> {
            self.0
                .method_hash([236, 87, 28, 106], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `setAssociatedCommitmentPool` (0xe19abef8) function
        pub fn set_associated_commitment_pool(
            &self,
            commitment_pool_address: ::ethers_core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([225, 154, 190, 248], commitment_pool_address)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `setDepositsDisabled` (0xea0cde85) function
        pub fn set_deposits_disabled(
            &self,
            state: bool,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([234, 12, 222, 133], state)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `updateDepositAmountLimits` (0xe8183c44) function
        pub fn update_deposit_amount_limits(
            &self,
            max_amount: ::ethers_core::types::U256,
            min_amount: ::ethers_core::types::U256,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([232, 24, 60, 68], (max_amount, min_amount))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `updateSanctionsListAddress` (0x30f49cac) function
        pub fn update_sanctions_list_address(
            &self,
            sanction: ::ethers_core::types::Address,
        ) -> ::ethers_contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([48, 244, 156, 172], sanction)
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `DepositAmountLimits` event
        pub fn deposit_amount_limits_filter(
            &self,
        ) -> ::ethers_contract::builders::Event<::std::sync::Arc<M>, M, DepositAmountLimitsFilter>
        {
            self.0.event()
        }
        ///Gets the contract's `DepositsDisabled` event
        pub fn deposits_disabled_filter(
            &self,
        ) -> ::ethers_contract::builders::Event<::std::sync::Arc<M>, M, DepositsDisabledFilter>
        {
            self.0.event()
        }
        ///Gets the contract's `OperatorChanged` event
        pub fn operator_changed_filter(
            &self,
        ) -> ::ethers_contract::builders::Event<::std::sync::Arc<M>, M, OperatorChangedFilter>
        {
            self.0.event()
        }
        ///Gets the contract's `SanctionsCheck` event
        pub fn sanctions_check_filter(
            &self,
        ) -> ::ethers_contract::builders::Event<::std::sync::Arc<M>, M, SanctionsCheckFilter>
        {
            self.0.event()
        }
        ///Gets the contract's `SanctionsList` event
        pub fn sanctions_list_filter(
            &self,
        ) -> ::ethers_contract::builders::Event<::std::sync::Arc<M>, M, SanctionsListFilter>
        {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers_contract::builders::Event<::std::sync::Arc<M>, M, MystikoV2LoopERC20Events>
        {
            self.0
                .event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers_providers::Middleware> From<::ethers_contract::Contract<M>>
        for MystikoV2LoopERC20<M>
    {
        fn from(contract: ::ethers_contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `AmountTooLarge` with signature `AmountTooLarge()` and selector `0x06250401`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(name = "AmountTooLarge", abi = "AmountTooLarge()")]
    pub struct AmountTooLarge;
    ///Custom Error type `AmountTooSmall` with signature `AmountTooSmall()` and selector `0xc2f5625a`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(name = "AmountTooSmall", abi = "AmountTooSmall()")]
    pub struct AmountTooSmall;
    ///Custom Error type `CommitmentHashIncorrect` with signature `CommitmentHashIncorrect()` and selector `0x37f544a0`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(name = "CommitmentHashIncorrect", abi = "CommitmentHashIncorrect()")]
    pub struct CommitmentHashIncorrect;
    ///Custom Error type `DepositsDisabled` with signature `DepositsDisabled()` and selector `0x717a1648`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(name = "DepositsDisabled", abi = "DepositsDisabled()")]
    pub struct DepositsDisabled;
    ///Custom Error type `HashKGreaterThanFieldSize` with signature `HashKGreaterThanFieldSize()` and selector `0x805f2a49`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(
        name = "HashKGreaterThanFieldSize",
        abi = "HashKGreaterThanFieldSize()"
    )]
    pub struct HashKGreaterThanFieldSize;
    ///Custom Error type `MinAmountGreaterThanMaxAmount` with signature `MinAmountGreaterThanMaxAmount()` and selector `0xc007d042`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(
        name = "MinAmountGreaterThanMaxAmount",
        abi = "MinAmountGreaterThanMaxAmount()"
    )]
    pub struct MinAmountGreaterThanMaxAmount;
    ///Custom Error type `NotChanged` with signature `NotChanged()` and selector `0x36a1c33f`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(name = "NotChanged", abi = "NotChanged()")]
    pub struct NotChanged;
    ///Custom Error type `OnlyOperator` with signature `OnlyOperator()` and selector `0x27e1f1e5`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(name = "OnlyOperator", abi = "OnlyOperator()")]
    pub struct OnlyOperator;
    ///Custom Error type `RandomSGreaterThanFieldSize` with signature `RandomSGreaterThanFieldSize()` and selector `0xeef782fc`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(
        name = "RandomSGreaterThanFieldSize",
        abi = "RandomSGreaterThanFieldSize()"
    )]
    pub struct RandomSGreaterThanFieldSize;
    ///Custom Error type `SanctionedAddress` with signature `SanctionedAddress()` and selector `0x2e70c0b1`
    #[derive(
        Clone,
        ::ethers_contract::EthError,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[etherror(name = "SanctionedAddress", abi = "SanctionedAddress()")]
    pub struct SanctionedAddress;
    ///Container type for all of the contract's custom errors
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        serde::Serialize,
        serde::Deserialize,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub enum MystikoV2LoopERC20Errors {
        AmountTooLarge(AmountTooLarge),
        AmountTooSmall(AmountTooSmall),
        CommitmentHashIncorrect(CommitmentHashIncorrect),
        DepositsDisabled(DepositsDisabled),
        HashKGreaterThanFieldSize(HashKGreaterThanFieldSize),
        MinAmountGreaterThanMaxAmount(MinAmountGreaterThanMaxAmount),
        NotChanged(NotChanged),
        OnlyOperator(OnlyOperator),
        RandomSGreaterThanFieldSize(RandomSGreaterThanFieldSize),
        SanctionedAddress(SanctionedAddress),
        /// The standard solidity revert string, with selector
        /// Error(string) -- 0x08c379a0
        RevertString(::std::string::String),
    }
    impl ::ethers_core::abi::AbiDecode for MystikoV2LoopERC20Errors {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers_core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded) =
                <::std::string::String as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::RevertString(decoded));
            }
            if let Ok(decoded) = <AmountTooLarge as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::AmountTooLarge(decoded));
            }
            if let Ok(decoded) = <AmountTooSmall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::AmountTooSmall(decoded));
            }
            if let Ok(decoded) =
                <CommitmentHashIncorrect as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::CommitmentHashIncorrect(decoded));
            }
            if let Ok(decoded) = <DepositsDisabled as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::DepositsDisabled(decoded));
            }
            if let Ok(decoded) =
                <HashKGreaterThanFieldSize as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::HashKGreaterThanFieldSize(decoded));
            }
            if let Ok(decoded) =
                <MinAmountGreaterThanMaxAmount as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::MinAmountGreaterThanMaxAmount(decoded));
            }
            if let Ok(decoded) = <NotChanged as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::NotChanged(decoded));
            }
            if let Ok(decoded) = <OnlyOperator as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::OnlyOperator(decoded));
            }
            if let Ok(decoded) =
                <RandomSGreaterThanFieldSize as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::RandomSGreaterThanFieldSize(decoded));
            }
            if let Ok(decoded) = <SanctionedAddress as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::SanctionedAddress(decoded));
            }
            Err(::ethers_core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers_core::abi::AbiEncode for MystikoV2LoopERC20Errors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::AmountTooLarge(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::AmountTooSmall(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::CommitmentHashIncorrect(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::DepositsDisabled(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::HashKGreaterThanFieldSize(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::MinAmountGreaterThanMaxAmount(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::NotChanged(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::OnlyOperator(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::RandomSGreaterThanFieldSize(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::SanctionedAddress(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::RevertString(s) => ::ethers_core::abi::AbiEncode::encode(s),
            }
        }
    }
    impl ::ethers_contract::ContractRevert for MystikoV2LoopERC20Errors {
        fn valid_selector(selector: [u8; 4]) -> bool {
            match selector {
                [0x08, 0xc3, 0x79, 0xa0] => true,
                _ if selector == <AmountTooLarge as ::ethers_contract::EthError>::selector() => {
                    true
                }
                _ if selector == <AmountTooSmall as ::ethers_contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <CommitmentHashIncorrect as ::ethers_contract::EthError>::selector() =>
                {
                    true
                }
                _ if selector == <DepositsDisabled as ::ethers_contract::EthError>::selector() => {
                    true
                }
                _ if selector
                    == <HashKGreaterThanFieldSize as ::ethers_contract::EthError>::selector() =>
                {
                    true
                }
                _ if selector
                    == <MinAmountGreaterThanMaxAmount as ::ethers_contract::EthError>::selector(
                    ) =>
                {
                    true
                }
                _ if selector == <NotChanged as ::ethers_contract::EthError>::selector() => true,
                _ if selector == <OnlyOperator as ::ethers_contract::EthError>::selector() => true,
                _ if selector
                    == <RandomSGreaterThanFieldSize as ::ethers_contract::EthError>::selector() =>
                {
                    true
                }
                _ if selector == <SanctionedAddress as ::ethers_contract::EthError>::selector() => {
                    true
                }
                _ => false,
            }
        }
    }
    impl ::core::fmt::Display for MystikoV2LoopERC20Errors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::AmountTooLarge(element) => ::core::fmt::Display::fmt(element, f),
                Self::AmountTooSmall(element) => ::core::fmt::Display::fmt(element, f),
                Self::CommitmentHashIncorrect(element) => ::core::fmt::Display::fmt(element, f),
                Self::DepositsDisabled(element) => ::core::fmt::Display::fmt(element, f),
                Self::HashKGreaterThanFieldSize(element) => ::core::fmt::Display::fmt(element, f),
                Self::MinAmountGreaterThanMaxAmount(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::NotChanged(element) => ::core::fmt::Display::fmt(element, f),
                Self::OnlyOperator(element) => ::core::fmt::Display::fmt(element, f),
                Self::RandomSGreaterThanFieldSize(element) => ::core::fmt::Display::fmt(element, f),
                Self::SanctionedAddress(element) => ::core::fmt::Display::fmt(element, f),
                Self::RevertString(s) => ::core::fmt::Display::fmt(s, f),
            }
        }
    }
    impl ::core::convert::From<::std::string::String> for MystikoV2LoopERC20Errors {
        fn from(value: String) -> Self {
            Self::RevertString(value)
        }
    }
    impl ::core::convert::From<AmountTooLarge> for MystikoV2LoopERC20Errors {
        fn from(value: AmountTooLarge) -> Self {
            Self::AmountTooLarge(value)
        }
    }
    impl ::core::convert::From<AmountTooSmall> for MystikoV2LoopERC20Errors {
        fn from(value: AmountTooSmall) -> Self {
            Self::AmountTooSmall(value)
        }
    }
    impl ::core::convert::From<CommitmentHashIncorrect> for MystikoV2LoopERC20Errors {
        fn from(value: CommitmentHashIncorrect) -> Self {
            Self::CommitmentHashIncorrect(value)
        }
    }
    impl ::core::convert::From<DepositsDisabled> for MystikoV2LoopERC20Errors {
        fn from(value: DepositsDisabled) -> Self {
            Self::DepositsDisabled(value)
        }
    }
    impl ::core::convert::From<HashKGreaterThanFieldSize> for MystikoV2LoopERC20Errors {
        fn from(value: HashKGreaterThanFieldSize) -> Self {
            Self::HashKGreaterThanFieldSize(value)
        }
    }
    impl ::core::convert::From<MinAmountGreaterThanMaxAmount> for MystikoV2LoopERC20Errors {
        fn from(value: MinAmountGreaterThanMaxAmount) -> Self {
            Self::MinAmountGreaterThanMaxAmount(value)
        }
    }
    impl ::core::convert::From<NotChanged> for MystikoV2LoopERC20Errors {
        fn from(value: NotChanged) -> Self {
            Self::NotChanged(value)
        }
    }
    impl ::core::convert::From<OnlyOperator> for MystikoV2LoopERC20Errors {
        fn from(value: OnlyOperator) -> Self {
            Self::OnlyOperator(value)
        }
    }
    impl ::core::convert::From<RandomSGreaterThanFieldSize> for MystikoV2LoopERC20Errors {
        fn from(value: RandomSGreaterThanFieldSize) -> Self {
            Self::RandomSGreaterThanFieldSize(value)
        }
    }
    impl ::core::convert::From<SanctionedAddress> for MystikoV2LoopERC20Errors {
        fn from(value: SanctionedAddress) -> Self {
            Self::SanctionedAddress(value)
        }
    }
    #[derive(
        Clone,
        ::ethers_contract::EthEvent,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethevent(
        name = "DepositAmountLimits",
        abi = "DepositAmountLimits(uint256,uint256)"
    )]
    pub struct DepositAmountLimitsFilter {
        pub max_amount: ::ethers_core::types::U256,
        pub min_amount: ::ethers_core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers_contract::EthEvent,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethevent(name = "DepositsDisabled", abi = "DepositsDisabled(bool)")]
    pub struct DepositsDisabledFilter {
        pub state: bool,
    }
    #[derive(
        Clone,
        ::ethers_contract::EthEvent,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethevent(name = "OperatorChanged", abi = "OperatorChanged(address)")]
    pub struct OperatorChangedFilter {
        #[ethevent(indexed)]
        pub operator: ::ethers_core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers_contract::EthEvent,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethevent(name = "SanctionsCheck", abi = "SanctionsCheck(bool)")]
    pub struct SanctionsCheckFilter {
        pub state: bool,
    }
    #[derive(
        Clone,
        ::ethers_contract::EthEvent,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethevent(name = "SanctionsList", abi = "SanctionsList(address)")]
    pub struct SanctionsListFilter {
        pub sanctions: ::ethers_core::types::Address,
    }
    ///Container type for all of the contract's events
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        serde::Serialize,
        serde::Deserialize,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub enum MystikoV2LoopERC20Events {
        DepositAmountLimitsFilter(DepositAmountLimitsFilter),
        DepositsDisabledFilter(DepositsDisabledFilter),
        OperatorChangedFilter(OperatorChangedFilter),
        SanctionsCheckFilter(SanctionsCheckFilter),
        SanctionsListFilter(SanctionsListFilter),
    }
    impl ::ethers_contract::EthLogDecode for MystikoV2LoopERC20Events {
        fn decode_log(
            log: &::ethers_core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers_core::abi::Error> {
            if let Ok(decoded) = DepositAmountLimitsFilter::decode_log(log) {
                return Ok(MystikoV2LoopERC20Events::DepositAmountLimitsFilter(decoded));
            }
            if let Ok(decoded) = DepositsDisabledFilter::decode_log(log) {
                return Ok(MystikoV2LoopERC20Events::DepositsDisabledFilter(decoded));
            }
            if let Ok(decoded) = OperatorChangedFilter::decode_log(log) {
                return Ok(MystikoV2LoopERC20Events::OperatorChangedFilter(decoded));
            }
            if let Ok(decoded) = SanctionsCheckFilter::decode_log(log) {
                return Ok(MystikoV2LoopERC20Events::SanctionsCheckFilter(decoded));
            }
            if let Ok(decoded) = SanctionsListFilter::decode_log(log) {
                return Ok(MystikoV2LoopERC20Events::SanctionsListFilter(decoded));
            }
            Err(::ethers_core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for MystikoV2LoopERC20Events {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::DepositAmountLimitsFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::DepositsDisabledFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::OperatorChangedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::SanctionsCheckFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::SanctionsListFilter(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<DepositAmountLimitsFilter> for MystikoV2LoopERC20Events {
        fn from(value: DepositAmountLimitsFilter) -> Self {
            Self::DepositAmountLimitsFilter(value)
        }
    }
    impl ::core::convert::From<DepositsDisabledFilter> for MystikoV2LoopERC20Events {
        fn from(value: DepositsDisabledFilter) -> Self {
            Self::DepositsDisabledFilter(value)
        }
    }
    impl ::core::convert::From<OperatorChangedFilter> for MystikoV2LoopERC20Events {
        fn from(value: OperatorChangedFilter) -> Self {
            Self::OperatorChangedFilter(value)
        }
    }
    impl ::core::convert::From<SanctionsCheckFilter> for MystikoV2LoopERC20Events {
        fn from(value: SanctionsCheckFilter) -> Self {
            Self::SanctionsCheckFilter(value)
        }
    }
    impl ::core::convert::From<SanctionsListFilter> for MystikoV2LoopERC20Events {
        fn from(value: SanctionsListFilter) -> Self {
            Self::SanctionsListFilter(value)
        }
    }
    ///Container type for all input parameters for the `assetDecimals` function with signature `assetDecimals()` and selector `0xc2d41601`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "assetDecimals", abi = "assetDecimals()")]
    pub struct AssetDecimalsCall;
    ///Container type for all input parameters for the `assetName` function with signature `assetName()` and selector `0xc9230c5d`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "assetName", abi = "assetName()")]
    pub struct AssetNameCall;
    ///Container type for all input parameters for the `assetSymbol` function with signature `assetSymbol()` and selector `0x176de7a8`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "assetSymbol", abi = "assetSymbol()")]
    pub struct AssetSymbolCall;
    ///Container type for all input parameters for the `assetType` function with signature `assetType()` and selector `0x3fe3347a`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "assetType", abi = "assetType()")]
    pub struct AssetTypeCall;
    ///Container type for all input parameters for the `bridgeType` function with signature `bridgeType()` and selector `0x2421e155`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "bridgeType", abi = "bridgeType()")]
    pub struct BridgeTypeCall;
    ///Container type for all input parameters for the `changeOperator` function with signature `changeOperator(address)` and selector `0x06394c9b`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "changeOperator", abi = "changeOperator(address)")]
    pub struct ChangeOperatorCall {
        pub new_operator: ::ethers_core::types::Address,
    }
    ///Container type for all input parameters for the `deposit` function with signature `deposit((uint256,uint256,uint256,uint128,bytes,uint256))` and selector `0xf6afe88f`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(
        name = "deposit",
        abi = "deposit((uint256,uint256,uint256,uint128,bytes,uint256))"
    )]
    pub struct DepositCall {
        pub request: DepositRequest,
    }
    ///Container type for all input parameters for the `disableSanctionsCheck` function with signature `disableSanctionsCheck()` and selector `0xdd757c34`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "disableSanctionsCheck", abi = "disableSanctionsCheck()")]
    pub struct DisableSanctionsCheckCall;
    ///Container type for all input parameters for the `enableSanctionsCheck` function with signature `enableSanctionsCheck()` and selector `0x01dbf19f`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "enableSanctionsCheck", abi = "enableSanctionsCheck()")]
    pub struct EnableSanctionsCheckCall;
    ///Container type for all input parameters for the `getAssociatedCommitmentPool` function with signature `getAssociatedCommitmentPool()` and selector `0xddac5dc1`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(
        name = "getAssociatedCommitmentPool",
        abi = "getAssociatedCommitmentPool()"
    )]
    pub struct GetAssociatedCommitmentPoolCall;
    ///Container type for all input parameters for the `getMaxAmount` function with signature `getMaxAmount()` and selector `0x0ba95909`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "getMaxAmount", abi = "getMaxAmount()")]
    pub struct GetMaxAmountCall;
    ///Container type for all input parameters for the `getMinAmount` function with signature `getMinAmount()` and selector `0xcfc7e2da`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "getMinAmount", abi = "getMinAmount()")]
    pub struct GetMinAmountCall;
    ///Container type for all input parameters for the `isDepositsDisabled` function with signature `isDepositsDisabled()` and selector `0xed6ea33a`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "isDepositsDisabled", abi = "isDepositsDisabled()")]
    pub struct IsDepositsDisabledCall;
    ///Container type for all input parameters for the `sanctionsCheck` function with signature `sanctionsCheck()` and selector `0xb1c39422`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "sanctionsCheck", abi = "sanctionsCheck()")]
    pub struct SanctionsCheckCall;
    ///Container type for all input parameters for the `sanctionsList` function with signature `sanctionsList()` and selector `0xec571c6a`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "sanctionsList", abi = "sanctionsList()")]
    pub struct SanctionsListCall;
    ///Container type for all input parameters for the `setAssociatedCommitmentPool` function with signature `setAssociatedCommitmentPool(address)` and selector `0xe19abef8`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(
        name = "setAssociatedCommitmentPool",
        abi = "setAssociatedCommitmentPool(address)"
    )]
    pub struct SetAssociatedCommitmentPoolCall {
        pub commitment_pool_address: ::ethers_core::types::Address,
    }
    ///Container type for all input parameters for the `setDepositsDisabled` function with signature `setDepositsDisabled(bool)` and selector `0xea0cde85`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(name = "setDepositsDisabled", abi = "setDepositsDisabled(bool)")]
    pub struct SetDepositsDisabledCall {
        pub state: bool,
    }
    ///Container type for all input parameters for the `updateDepositAmountLimits` function with signature `updateDepositAmountLimits(uint256,uint256)` and selector `0xe8183c44`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(
        name = "updateDepositAmountLimits",
        abi = "updateDepositAmountLimits(uint256,uint256)"
    )]
    pub struct UpdateDepositAmountLimitsCall {
        pub max_amount: ::ethers_core::types::U256,
        pub min_amount: ::ethers_core::types::U256,
    }
    ///Container type for all input parameters for the `updateSanctionsListAddress` function with signature `updateSanctionsListAddress(address)` and selector `0x30f49cac`
    #[derive(
        Clone,
        ::ethers_contract::EthCall,
        ::ethers_contract::EthDisplay,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    #[ethcall(
        name = "updateSanctionsListAddress",
        abi = "updateSanctionsListAddress(address)"
    )]
    pub struct UpdateSanctionsListAddressCall {
        pub sanction: ::ethers_core::types::Address,
    }
    ///Container type for all of the contract's call
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        serde::Serialize,
        serde::Deserialize,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub enum MystikoV2LoopERC20Calls {
        AssetDecimals(AssetDecimalsCall),
        AssetName(AssetNameCall),
        AssetSymbol(AssetSymbolCall),
        AssetType(AssetTypeCall),
        BridgeType(BridgeTypeCall),
        ChangeOperator(ChangeOperatorCall),
        Deposit(DepositCall),
        DisableSanctionsCheck(DisableSanctionsCheckCall),
        EnableSanctionsCheck(EnableSanctionsCheckCall),
        GetAssociatedCommitmentPool(GetAssociatedCommitmentPoolCall),
        GetMaxAmount(GetMaxAmountCall),
        GetMinAmount(GetMinAmountCall),
        IsDepositsDisabled(IsDepositsDisabledCall),
        SanctionsCheck(SanctionsCheckCall),
        SanctionsList(SanctionsListCall),
        SetAssociatedCommitmentPool(SetAssociatedCommitmentPoolCall),
        SetDepositsDisabled(SetDepositsDisabledCall),
        UpdateDepositAmountLimits(UpdateDepositAmountLimitsCall),
        UpdateSanctionsListAddress(UpdateSanctionsListAddressCall),
    }
    impl ::ethers_core::abi::AbiDecode for MystikoV2LoopERC20Calls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers_core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded) = <AssetDecimalsCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::AssetDecimals(decoded));
            }
            if let Ok(decoded) = <AssetNameCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::AssetName(decoded));
            }
            if let Ok(decoded) = <AssetSymbolCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::AssetSymbol(decoded));
            }
            if let Ok(decoded) = <AssetTypeCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::AssetType(decoded));
            }
            if let Ok(decoded) = <BridgeTypeCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::BridgeType(decoded));
            }
            if let Ok(decoded) = <ChangeOperatorCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::ChangeOperator(decoded));
            }
            if let Ok(decoded) = <DepositCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Deposit(decoded));
            }
            if let Ok(decoded) =
                <DisableSanctionsCheckCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::DisableSanctionsCheck(decoded));
            }
            if let Ok(decoded) =
                <EnableSanctionsCheckCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::EnableSanctionsCheck(decoded));
            }
            if let Ok(decoded) =
                <GetAssociatedCommitmentPoolCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::GetAssociatedCommitmentPool(decoded));
            }
            if let Ok(decoded) = <GetMaxAmountCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetMaxAmount(decoded));
            }
            if let Ok(decoded) = <GetMinAmountCall as ::ethers_core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetMinAmount(decoded));
            }
            if let Ok(decoded) =
                <IsDepositsDisabledCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::IsDepositsDisabled(decoded));
            }
            if let Ok(decoded) = <SanctionsCheckCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::SanctionsCheck(decoded));
            }
            if let Ok(decoded) = <SanctionsListCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::SanctionsList(decoded));
            }
            if let Ok(decoded) =
                <SetAssociatedCommitmentPoolCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::SetAssociatedCommitmentPool(decoded));
            }
            if let Ok(decoded) =
                <SetDepositsDisabledCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::SetDepositsDisabled(decoded));
            }
            if let Ok(decoded) =
                <UpdateDepositAmountLimitsCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::UpdateDepositAmountLimits(decoded));
            }
            if let Ok(decoded) =
                <UpdateSanctionsListAddressCall as ::ethers_core::abi::AbiDecode>::decode(data)
            {
                return Ok(Self::UpdateSanctionsListAddress(decoded));
            }
            Err(::ethers_core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers_core::abi::AbiEncode for MystikoV2LoopERC20Calls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::AssetDecimals(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::AssetName(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::AssetSymbol(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::AssetType(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::BridgeType(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::ChangeOperator(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::Deposit(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::DisableSanctionsCheck(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::EnableSanctionsCheck(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::GetAssociatedCommitmentPool(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::GetMaxAmount(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::GetMinAmount(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::IsDepositsDisabled(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::SanctionsCheck(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::SanctionsList(element) => ::ethers_core::abi::AbiEncode::encode(element),
                Self::SetAssociatedCommitmentPool(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::SetDepositsDisabled(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::UpdateDepositAmountLimits(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
                Self::UpdateSanctionsListAddress(element) => {
                    ::ethers_core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for MystikoV2LoopERC20Calls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::AssetDecimals(element) => ::core::fmt::Display::fmt(element, f),
                Self::AssetName(element) => ::core::fmt::Display::fmt(element, f),
                Self::AssetSymbol(element) => ::core::fmt::Display::fmt(element, f),
                Self::AssetType(element) => ::core::fmt::Display::fmt(element, f),
                Self::BridgeType(element) => ::core::fmt::Display::fmt(element, f),
                Self::ChangeOperator(element) => ::core::fmt::Display::fmt(element, f),
                Self::Deposit(element) => ::core::fmt::Display::fmt(element, f),
                Self::DisableSanctionsCheck(element) => ::core::fmt::Display::fmt(element, f),
                Self::EnableSanctionsCheck(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetAssociatedCommitmentPool(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetMaxAmount(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetMinAmount(element) => ::core::fmt::Display::fmt(element, f),
                Self::IsDepositsDisabled(element) => ::core::fmt::Display::fmt(element, f),
                Self::SanctionsCheck(element) => ::core::fmt::Display::fmt(element, f),
                Self::SanctionsList(element) => ::core::fmt::Display::fmt(element, f),
                Self::SetAssociatedCommitmentPool(element) => ::core::fmt::Display::fmt(element, f),
                Self::SetDepositsDisabled(element) => ::core::fmt::Display::fmt(element, f),
                Self::UpdateDepositAmountLimits(element) => ::core::fmt::Display::fmt(element, f),
                Self::UpdateSanctionsListAddress(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<AssetDecimalsCall> for MystikoV2LoopERC20Calls {
        fn from(value: AssetDecimalsCall) -> Self {
            Self::AssetDecimals(value)
        }
    }
    impl ::core::convert::From<AssetNameCall> for MystikoV2LoopERC20Calls {
        fn from(value: AssetNameCall) -> Self {
            Self::AssetName(value)
        }
    }
    impl ::core::convert::From<AssetSymbolCall> for MystikoV2LoopERC20Calls {
        fn from(value: AssetSymbolCall) -> Self {
            Self::AssetSymbol(value)
        }
    }
    impl ::core::convert::From<AssetTypeCall> for MystikoV2LoopERC20Calls {
        fn from(value: AssetTypeCall) -> Self {
            Self::AssetType(value)
        }
    }
    impl ::core::convert::From<BridgeTypeCall> for MystikoV2LoopERC20Calls {
        fn from(value: BridgeTypeCall) -> Self {
            Self::BridgeType(value)
        }
    }
    impl ::core::convert::From<ChangeOperatorCall> for MystikoV2LoopERC20Calls {
        fn from(value: ChangeOperatorCall) -> Self {
            Self::ChangeOperator(value)
        }
    }
    impl ::core::convert::From<DepositCall> for MystikoV2LoopERC20Calls {
        fn from(value: DepositCall) -> Self {
            Self::Deposit(value)
        }
    }
    impl ::core::convert::From<DisableSanctionsCheckCall> for MystikoV2LoopERC20Calls {
        fn from(value: DisableSanctionsCheckCall) -> Self {
            Self::DisableSanctionsCheck(value)
        }
    }
    impl ::core::convert::From<EnableSanctionsCheckCall> for MystikoV2LoopERC20Calls {
        fn from(value: EnableSanctionsCheckCall) -> Self {
            Self::EnableSanctionsCheck(value)
        }
    }
    impl ::core::convert::From<GetAssociatedCommitmentPoolCall> for MystikoV2LoopERC20Calls {
        fn from(value: GetAssociatedCommitmentPoolCall) -> Self {
            Self::GetAssociatedCommitmentPool(value)
        }
    }
    impl ::core::convert::From<GetMaxAmountCall> for MystikoV2LoopERC20Calls {
        fn from(value: GetMaxAmountCall) -> Self {
            Self::GetMaxAmount(value)
        }
    }
    impl ::core::convert::From<GetMinAmountCall> for MystikoV2LoopERC20Calls {
        fn from(value: GetMinAmountCall) -> Self {
            Self::GetMinAmount(value)
        }
    }
    impl ::core::convert::From<IsDepositsDisabledCall> for MystikoV2LoopERC20Calls {
        fn from(value: IsDepositsDisabledCall) -> Self {
            Self::IsDepositsDisabled(value)
        }
    }
    impl ::core::convert::From<SanctionsCheckCall> for MystikoV2LoopERC20Calls {
        fn from(value: SanctionsCheckCall) -> Self {
            Self::SanctionsCheck(value)
        }
    }
    impl ::core::convert::From<SanctionsListCall> for MystikoV2LoopERC20Calls {
        fn from(value: SanctionsListCall) -> Self {
            Self::SanctionsList(value)
        }
    }
    impl ::core::convert::From<SetAssociatedCommitmentPoolCall> for MystikoV2LoopERC20Calls {
        fn from(value: SetAssociatedCommitmentPoolCall) -> Self {
            Self::SetAssociatedCommitmentPool(value)
        }
    }
    impl ::core::convert::From<SetDepositsDisabledCall> for MystikoV2LoopERC20Calls {
        fn from(value: SetDepositsDisabledCall) -> Self {
            Self::SetDepositsDisabled(value)
        }
    }
    impl ::core::convert::From<UpdateDepositAmountLimitsCall> for MystikoV2LoopERC20Calls {
        fn from(value: UpdateDepositAmountLimitsCall) -> Self {
            Self::UpdateDepositAmountLimits(value)
        }
    }
    impl ::core::convert::From<UpdateSanctionsListAddressCall> for MystikoV2LoopERC20Calls {
        fn from(value: UpdateSanctionsListAddressCall) -> Self {
            Self::UpdateSanctionsListAddress(value)
        }
    }
    ///Container type for all return fields from the `assetDecimals` function with signature `assetDecimals()` and selector `0xc2d41601`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct AssetDecimalsReturn(pub u8);
    ///Container type for all return fields from the `assetName` function with signature `assetName()` and selector `0xc9230c5d`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct AssetNameReturn(pub ::std::string::String);
    ///Container type for all return fields from the `assetSymbol` function with signature `assetSymbol()` and selector `0x176de7a8`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct AssetSymbolReturn(pub ::std::string::String);
    ///Container type for all return fields from the `assetType` function with signature `assetType()` and selector `0x3fe3347a`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct AssetTypeReturn(pub u8);
    ///Container type for all return fields from the `bridgeType` function with signature `bridgeType()` and selector `0x2421e155`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct BridgeTypeReturn(pub ::std::string::String);
    ///Container type for all return fields from the `getAssociatedCommitmentPool` function with signature `getAssociatedCommitmentPool()` and selector `0xddac5dc1`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct GetAssociatedCommitmentPoolReturn(pub ::ethers_core::types::Address);
    ///Container type for all return fields from the `getMaxAmount` function with signature `getMaxAmount()` and selector `0x0ba95909`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct GetMaxAmountReturn(pub ::ethers_core::types::U256);
    ///Container type for all return fields from the `getMinAmount` function with signature `getMinAmount()` and selector `0xcfc7e2da`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct GetMinAmountReturn(pub ::ethers_core::types::U256);
    ///Container type for all return fields from the `isDepositsDisabled` function with signature `isDepositsDisabled()` and selector `0xed6ea33a`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct IsDepositsDisabledReturn(pub bool);
    ///Container type for all return fields from the `sanctionsCheck` function with signature `sanctionsCheck()` and selector `0xb1c39422`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct SanctionsCheckReturn(pub bool);
    ///Container type for all return fields from the `sanctionsList` function with signature `sanctionsList()` and selector `0xec571c6a`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct SanctionsListReturn(pub ::ethers_core::types::Address);
    ///`DepositRequest(uint256,uint256,uint256,uint128,bytes,uint256)`
    #[derive(
        Clone,
        ::ethers_contract::EthAbiType,
        ::ethers_contract::EthAbiCodec,
        serde::Serialize,
        serde::Deserialize,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash,
    )]
    pub struct DepositRequest {
        pub amount: ::ethers_core::types::U256,
        pub commitment: ::ethers_core::types::U256,
        pub hash_k: ::ethers_core::types::U256,
        pub random_s: u128,
        pub encrypted_note: ::ethers_core::types::Bytes,
        pub rollup_fee: ::ethers_core::types::U256,
    }
}
