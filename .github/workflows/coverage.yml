name: Coverage

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - 'codecov.yml'
      - '.github/workflows/coverage.yml'
  pull_request:
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - 'codecov.yml'
      - '.github/workflows/coverage.yml'

jobs:
  coverage:
    name: Coverage on stable
    timeout-minutes: 140
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:0.25.2-nightly
      options: --security-opt seccomp=unconfined

    steps:
      - name: Install Git LFS
        run: |
          apt-get update -y && apt-get install -y git-lfs

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PACKAGES_TOKEN }}
          lfs: true
          submodules: recursive
          persist-credentials: false

      - uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Update Rust toolchain
        run: rustup install 1.69.0 && rustup override set 1.69.0

      - name: Clean
        run: cargo clean

#      - name: Cache
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.cargo/bin/
#            ~/.cargo/registry/index/
#            ~/.cargo/registry/cache/
#            ~/.cargo/git/db/
#            target/
#          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Get Space Usage
        run: |
          DISK_USAGE=$(du -sh *)
          echo $DISK_USAGE

      - name: Generate code coverage
        run: |
          cargo +nightly tarpaulin --verbose --all-features --workspace --timeout 140 --out Xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

      - run: git diff --quiet || (echo "some generated files are not included in repo" && exit 1)

      - name: Get Space Usage
        if: failure()
        run: |
          DISK_USAGE=$(du -sh *)
          echo $DISK_USAGE

#      - name: Telegram Failure Notification
#        uses: appleboy/telegram-action@master
#        if: failure()
#        with:
#          message: ‚ùó Run coverage failed for [${{ github.repository }}](https://github.com/${{ github.repository }}/actions) because of ${{ github.actor }}
#          format: markdown
#          to: ${{ secrets.TELEGRAM_CHAT_ID }}
#          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
